<?xml version="1.0" encoding="utf-8"?>
<!-- String resources for the BBQ Timer application. -->
<resources>

    <!-- A menu command in the Options Menu, to open a (future) Settings activity. [This feature
      might get removed from the app.] -->
    <string name="action_settings">Settings</string>

    <!-- The application's name. -->
    <string name="app_name">BBQ Timer</string>

    <!-- The application's description. This goes into the AndroidManifest. -->
    <string name="app_description">A stopwatch with a lock-screen widget (so you can see the cook time without unlocking your phone).</string>

    <!-- Label for the button that resets the timer to be stopped at 00:00. -->
    <string name="reset">Reset</string>

    <!-- Label for the button that starts or resumes the stopped timer. -->
    <string name="start">Start</string>

    <!-- Label for the button that pauses the running timer. This stops the timer without resetting
      the timer, and the timer can be resumed after this, so "pause" is a more fitting term than
      "stop" in English. -->
    <string name="stop">Pause</string>

    <!-- Accessibility description for the button that starts or resumes the stopped timer, or else
      pauses the running timer. -->
    <string name="start_stop">Start/Pause</string>

    <!-- The initial text for a reset timer showing 0 minutes and 0.0 seconds. This should match the
      locale's format used by the Android OS utility DateUtils.formatElapsedTime() with appended
      tenths of a second, but the user shouldn't see it since it gets replaced immediately with a
      string computed by formatting the duration 0.

      NOTE: If appending the fractional part ".0" is not sufficient for localization, the code needs
      a format string that lets the localizer control the positions.

      In English, the Android OS format is "00:00" even though "0:00" might look better. -->
    <string name="time0">00:00.0</string>

</resources>
